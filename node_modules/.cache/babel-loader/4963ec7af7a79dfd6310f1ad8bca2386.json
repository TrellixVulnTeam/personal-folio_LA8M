{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LifeUpdater = void 0;\n\nconst Utils_1 = require(\"../../Utils\");\n\nclass LifeUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  isEnabled(particle) {\n    return !particle.destroyed;\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    const life = particle.life;\n    let justSpawned = false;\n\n    if (particle.spawning) {\n      life.delayTime += delta.value;\n\n      if (life.delayTime >= particle.life.delay) {\n        justSpawned = true;\n        particle.spawning = false;\n        life.delayTime = 0;\n        life.time = 0;\n      } else {\n        return;\n      }\n    }\n\n    if (life.duration === -1) {\n      return;\n    }\n\n    if (particle.spawning) {\n      return;\n    }\n\n    if (justSpawned) {\n      life.time = 0;\n    } else {\n      life.time += delta.value;\n    }\n\n    if (life.time < life.duration) {\n      return;\n    }\n\n    life.time = 0;\n\n    if (particle.life.count > 0) {\n      particle.life.count--;\n    }\n\n    if (particle.life.count === 0) {\n      particle.destroy();\n      return;\n    }\n\n    const canvasSize = this.container.canvas.size,\n          widthRange = Utils_1.setRangeValue(0, canvasSize.width),\n          heightRange = Utils_1.setRangeValue(0, canvasSize.width);\n    particle.position.x = Utils_1.randomInRange(widthRange);\n    particle.position.y = Utils_1.randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = 0;\n    life.time = 0;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    life.delay = Utils_1.getRangeValue(lifeOptions.delay.value) * 1000;\n    life.duration = Utils_1.getRangeValue(lifeOptions.duration.value) * 1000;\n  }\n\n}\n\nexports.LifeUpdater = LifeUpdater;","map":{"version":3,"sources":["C:/Users/Tiago/personal-folio/node_modules/tsparticles/Updaters/Life/LifeUpdater.js"],"names":["Object","defineProperty","exports","value","LifeUpdater","Utils_1","require","constructor","container","isEnabled","particle","destroyed","update","delta","life","justSpawned","spawning","delayTime","delay","time","duration","count","destroy","canvasSize","canvas","size","widthRange","setRangeValue","width","heightRange","position","x","randomInRange","y","reset","lifeOptions","options","getRangeValue"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LifeUpdater = void 0;\r\nconst Utils_1 = require(\"../../Utils\");\r\nclass LifeUpdater {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    isEnabled(particle) {\r\n        return !particle.destroyed;\r\n    }\r\n    update(particle, delta) {\r\n        if (!this.isEnabled(particle)) {\r\n            return;\r\n        }\r\n        const life = particle.life;\r\n        let justSpawned = false;\r\n        if (particle.spawning) {\r\n            life.delayTime += delta.value;\r\n            if (life.delayTime >= particle.life.delay) {\r\n                justSpawned = true;\r\n                particle.spawning = false;\r\n                life.delayTime = 0;\r\n                life.time = 0;\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        if (life.duration === -1) {\r\n            return;\r\n        }\r\n        if (particle.spawning) {\r\n            return;\r\n        }\r\n        if (justSpawned) {\r\n            life.time = 0;\r\n        }\r\n        else {\r\n            life.time += delta.value;\r\n        }\r\n        if (life.time < life.duration) {\r\n            return;\r\n        }\r\n        life.time = 0;\r\n        if (particle.life.count > 0) {\r\n            particle.life.count--;\r\n        }\r\n        if (particle.life.count === 0) {\r\n            particle.destroy();\r\n            return;\r\n        }\r\n        const canvasSize = this.container.canvas.size, widthRange = Utils_1.setRangeValue(0, canvasSize.width), heightRange = Utils_1.setRangeValue(0, canvasSize.width);\r\n        particle.position.x = Utils_1.randomInRange(widthRange);\r\n        particle.position.y = Utils_1.randomInRange(heightRange);\r\n        particle.spawning = true;\r\n        life.delayTime = 0;\r\n        life.time = 0;\r\n        particle.reset();\r\n        const lifeOptions = particle.options.life;\r\n        life.delay = Utils_1.getRangeValue(lifeOptions.delay.value) * 1000;\r\n        life.duration = Utils_1.getRangeValue(lifeOptions.duration.value) * 1000;\r\n    }\r\n}\r\nexports.LifeUpdater = LifeUpdater;\r\n"]},"metadata":{},"sourceType":"script"}