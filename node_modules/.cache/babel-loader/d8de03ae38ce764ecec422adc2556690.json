{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OpacityUpdater = void 0;\n\nconst Enums_1 = require(\"../../Enums\");\n\nconst Utils_1 = require(\"../../Utils\");\n\nfunction checkDestroy(particle, destroy, value, minValue, maxValue) {\n  switch (destroy) {\n    case Enums_1.DestroyType.max:\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n\n      break;\n\n    case Enums_1.DestroyType.min:\n      if (value <= minValue) {\n        particle.destroy();\n      }\n\n      break;\n  }\n}\n\nfunction updateOpacity(particle, delta) {\n  var _a, _b;\n\n  const opacityOpt = particle.options.opacity;\n  const opacityAnim = opacityOpt.animation;\n  const minValue = particle.opacity.min;\n  const maxValue = particle.opacity.max;\n\n  if (!(!particle.destroyed && opacityAnim.enable && (opacityAnim.count <= 0 || particle.loops.opacity < opacityAnim.count))) {\n    return;\n  }\n\n  switch (particle.opacity.status) {\n    case Enums_1.AnimationStatus.increasing:\n      if (particle.opacity.value >= maxValue) {\n        particle.opacity.status = Enums_1.AnimationStatus.decreasing;\n        particle.loops.opacity++;\n      } else {\n        particle.opacity.value += ((_a = particle.opacity.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\n      }\n\n      break;\n\n    case Enums_1.AnimationStatus.decreasing:\n      if (particle.opacity.value <= minValue) {\n        particle.opacity.status = Enums_1.AnimationStatus.increasing;\n        particle.loops.opacity++;\n      } else {\n        particle.opacity.value -= ((_b = particle.opacity.velocity) !== null && _b !== void 0 ? _b : 0) * delta.factor;\n      }\n\n      break;\n  }\n\n  checkDestroy(particle, opacityAnim.destroy, particle.opacity.value, minValue, maxValue);\n\n  if (!particle.destroyed) {\n    particle.opacity.value = Utils_1.clamp(particle.opacity.value, minValue, maxValue);\n  }\n}\n\nclass OpacityUpdater {\n  isEnabled(particle) {\n    const opacityAnim = particle.options.opacity.anim;\n    return !particle.destroyed && !particle.spawning && opacityAnim.enable && (opacityAnim.count <= 0 || particle.loops.opacity < opacityAnim.count);\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateOpacity(particle, delta);\n  }\n\n}\n\nexports.OpacityUpdater = OpacityUpdater;","map":{"version":3,"sources":["C:/Users/Tiago/personal-folio/node_modules/tsparticles/Updaters/Opacity/OpacityUpdater.js"],"names":["Object","defineProperty","exports","value","OpacityUpdater","Enums_1","require","Utils_1","checkDestroy","particle","destroy","minValue","maxValue","DestroyType","max","min","updateOpacity","delta","_a","_b","opacityOpt","options","opacity","opacityAnim","animation","destroyed","enable","count","loops","status","AnimationStatus","increasing","decreasing","velocity","factor","clamp","isEnabled","anim","spawning","update"],"mappings":"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","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.OpacityUpdater = void 0;\r\nconst Enums_1 = require(\"../../Enums\");\r\nconst Utils_1 = require(\"../../Utils\");\r\nfunction checkDestroy(particle, destroy, value, minValue, maxValue) {\r\n    switch (destroy) {\r\n        case Enums_1.DestroyType.max:\r\n            if (value >= maxValue) {\r\n                particle.destroy();\r\n            }\r\n            break;\r\n        case Enums_1.DestroyType.min:\r\n            if (value <= minValue) {\r\n                particle.destroy();\r\n            }\r\n            break;\r\n    }\r\n}\r\nfunction updateOpacity(particle, delta) {\r\n    var _a, _b;\r\n    const opacityOpt = particle.options.opacity;\r\n    const opacityAnim = opacityOpt.animation;\r\n    const minValue = particle.opacity.min;\r\n    const maxValue = particle.opacity.max;\r\n    if (!(!particle.destroyed &&\r\n        opacityAnim.enable &&\r\n        (opacityAnim.count <= 0 || particle.loops.opacity < opacityAnim.count))) {\r\n        return;\r\n    }\r\n    switch (particle.opacity.status) {\r\n        case Enums_1.AnimationStatus.increasing:\r\n            if (particle.opacity.value >= maxValue) {\r\n                particle.opacity.status = Enums_1.AnimationStatus.decreasing;\r\n                particle.loops.opacity++;\r\n            }\r\n            else {\r\n                particle.opacity.value += ((_a = particle.opacity.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor;\r\n            }\r\n            break;\r\n        case Enums_1.AnimationStatus.decreasing:\r\n            if (particle.opacity.value <= minValue) {\r\n                particle.opacity.status = Enums_1.AnimationStatus.increasing;\r\n                particle.loops.opacity++;\r\n            }\r\n            else {\r\n                particle.opacity.value -= ((_b = particle.opacity.velocity) !== null && _b !== void 0 ? _b : 0) * delta.factor;\r\n            }\r\n            break;\r\n    }\r\n    checkDestroy(particle, opacityAnim.destroy, particle.opacity.value, minValue, maxValue);\r\n    if (!particle.destroyed) {\r\n        particle.opacity.value = Utils_1.clamp(particle.opacity.value, minValue, maxValue);\r\n    }\r\n}\r\nclass OpacityUpdater {\r\n    isEnabled(particle) {\r\n        const opacityAnim = particle.options.opacity.anim;\r\n        return (!particle.destroyed &&\r\n            !particle.spawning &&\r\n            opacityAnim.enable &&\r\n            (opacityAnim.count <= 0 || particle.loops.opacity < opacityAnim.count));\r\n    }\r\n    update(particle, delta) {\r\n        if (!this.isEnabled(particle)) {\r\n            return;\r\n        }\r\n        updateOpacity(particle, delta);\r\n    }\r\n}\r\nexports.OpacityUpdater = OpacityUpdater;\r\n"]},"metadata":{},"sourceType":"script"}